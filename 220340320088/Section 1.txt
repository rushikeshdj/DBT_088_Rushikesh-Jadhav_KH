-- Section 1
-- 1. Create table DEPT with the following structure:-
 
create table DEPT(
DEPTNO int(2),
DNAME varchar(15),
LOC varchar(10)
);

-- Insert the following rows into the DEPT table:-

insert into dept
values (10,'ACCOUNTING','NEW YORK'),
(20, 'RESEARCH','DALLAS'),
(30,'SALES','CHICAGO'),
(40,'OPERATIONS','BOSTON');

-- 2. Create table EMP with the following structure:-

create table EMP(
EMPNO int(4),
ENAME varchar(10),
JOB varchar(9),
HIREDATE date,
SAL float(7,2),
COMM float(7,2),
DEPTNO int(2)
);

-- Insert the following rows into the EMP table:-

insert into emp
values
(7839,'KING','MANAGER','1991-11-17',5000, NULL, 10),
(7698,'BLAKE','CLERK','1981-05-01',2850, NULL,30),
(7782,'CLARK','MANAGER','1981-06-09',2450, NULL, 10),
(7566,'JONES','CLERK','1981-04-02',2975 ,NULL, 20),
(7654 ,'MARTIN','SALESMAN','1981-09-28' ,1250 ,1400 ,30),
(7499 ,'ALLEN','SALESMAN','1981-02-20',1600 ,300, 30);

-- 3. Display all the employees where SAL between 2500 and 5000 (inclusive of both).

select * from emp where sal between 2500 and 5000;

-- 4. Display all the ENAMEs in descending order of ENAME.

select ename from emp order by ename desc;

-- 5. Display all the JOBs in lowercase.

select lower(job) from emp;

-- 6. Display the ENAMEs and the lengths of the ENAMEs.

select ename,length(ename) from emp;

-- 7. Display the DEPTNO and the count of employees who belong to that DEPTNO .

select deptno,count(deptno) from emp
group by deptno;

-- 8. Display the DNAMEs and the ENAMEs who belong to that DNAME.

select dept.dname,emp.ename from emp
inner join dept on emp.deptno=dept.deptno;

-- 9. Display the position at which the string ‘AR’ occurs in the ename.

select ENAME,position("AR" in ename) as 'AR position' from emp;

-- 10. Display the HRA for each employee given that HRA is 20% of SAL.

select ENAME,(0.20*sal) as HRA from emp;

/*======section 2======*/

-- Section 2 Q1
-- stored procedure

create table TEMPP(
string1 varchar(20),
string2 varchar(20),
Message varchar(20)
);

delimiter //
create procedure PROC1(string1 varchar(20),string2 varchar(20))
begin
	declare message varchar(20) default null;
	if position(string1 in string2) > 0 then
     insert into tempp values(string1,string2,'String exists');
    else
	 insert into tempp values(string1,string2,'String not exists');
	end if;
end; //
delimiter ;

call proc1('DAC','CDAC');
select * from tempp;


-- Section 2 Q2
-- stored function

delimiter //
create function FUNC1(A int,B int,C int)
returns boolean
deterministic
begin
   if (a<=b+c) and (c<=a+b) and (b<=a+c) then
   return TRUE;
   else
   return FALSE;
   end if;
end; //
delimiter ;

select FUNC1(10,20,10) from dual;

